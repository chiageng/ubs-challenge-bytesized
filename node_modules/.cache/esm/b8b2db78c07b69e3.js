_c07‍.x([["colonyBalcony",()=>colonyBalcony]]);const colonyBalcony = async (arr) => {
  let output = []

  for (let i = 0; i < arr.length; i++) {
    let curr = arr[i];
    let tempOutput = runAllGeneration(curr.generations, curr.colony);
    output.push(tempOutput)
  }

  return output
}

const runAllGeneration = async (generation, colony) => {
  let newColony = colony;
  for (let i = 0; i < generation; i++) {
    newColony = runOneGeneration(newColony);
  }
}

const runOneGeneration = async (colony) => {
  const currString = colony;
  console.log(currString)
  let generatingString = currString.charAt(0);

  // let sum = summation(currString);
  // for (let i = 0; i < currString.length - 1; i++) {
  //   const left = currString.charAt(i);
  //   const right  = currString.charAt(i + 1);

  //   let significant = parseInt(left) - parseInt(right)

  //   if (significant < 0) {
  //     significant += 10;
  //   }

  //   let tempFinal = (sum + significant) % 10;
  //   generatingString += tempFinal.toString()
  //   generatingString += right; 
  // }

  // return generatingString;
}

const summation = async (item) => {
  let value = 0;

  for (let i = 0; i < item.length; i++) {
    value += parseInt(item.charAt(i))
  }
  return value;
}